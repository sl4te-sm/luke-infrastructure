---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: "10.10.1"
automountServiceAccountToken: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: "10.10.1"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
  storageClassName: nfs-client
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: "10.10.1"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"
  storageClassName: nfs-client
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: "10.10.1"
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 8096
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: jellyfin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: "10.10.1"
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/version: "10.10.1"
    spec:
      serviceAccountName: jellyfin
      securityContext:
        {}
      containers:
        - name: jellyfin
          securityContext:
            {}
          image: "docker.io/jellyfin/jellyfin:10.10.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http
          resources:
            limits:
              gpu.intel.com/i915: 1
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
            - mountPath: /cache
              name: cache
          env:
            - name: JELLYFIN_PublishedServerUrl
              value: "https://jellyfin.services.luke-domain.com"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config
        - name: cache
          persistentVolumeClaim:
            claimName: jellyfin-cache
        - name: media
          nfs:
            server: files.luke-domain.com
            path: /media/HouseStorage
      hostNetwork: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`jellyfin.services.luke-domain.com`)
      services:
        - name: jellyfin
          port: 8096
